package com.hyosakura.lexicalanalysis.enumeration

/**
 * @author LovesAsuna
 **/
enum class KeyWord(override val value: String) : Token {
    MAIN("main"),
    ASM("asm"),
    ELSE("else"),
    NEW("new"),
    THIS("this"),
    AUTO("auto"),
    ENUM("enum"),
    OPERATOR("operator"),
    THROW("throw"),
    BOOL("bool"),
    EXPLICIT("explicit"),
    PRIVATE("private"),
    TRUE("true"),
    BREAK("break"),
    EXPORT("export"),
    PROTECTED("protected"),
    TRY("try"),
    CASE("case"),
    EXTERN("extern"),
    PUBLIC("public"),
    TYPEDEF("typedef"),
    CATCH("catch"),
    FALSE("false"),
    REGISTER("register"),
    TYPEID("typeid"),
    ChAR("char"),
    FLOAT("flat"),
    REINTERPRET_CAST("reinterpret_cast"),
    TYPENAME("typename"),
    ClASS("class"),
    FOR("for"),
    RETURN("return"),
    UNION("union"),
    CONST("const"),
    FRIEND("friend"),
    SHORT("short"),
    UNSIGNED("unsigned"),
    CONST_CAST("const_cast"),
    GOTO("goto"),
    SIGNED("signed"),
    USING("using"),
    CONTINUE("continue"),
    IF("if"),
    SIZEOF("sizeof"),
    VIRTUAL("virtual"),
    DEFAULT("default"),
    INLINE("inline"),
    STATIC("static"),
    VOID("void"),
    DELETE("delete"),
    INT("int"),
    STATIC_CAST("static_cast"),
    VOLATILE("volatile"),
    DO("do"),
    LONG("long"),
    STRUCT("struct"),
    WCHAR_T("wchar_t"),
    DOUBLE("double"),
    MUTABLE("mutable"),
    SWITCH("switch"),
    WHILE("while"),
    DYNAMIC_CAST("dynamic_cast"),
    NAMESPACE("namespace"),
    TEMPLATE("template"),
    INCLUDE("include"),
    CIN("cin"),
    COUT("cout");

    override val type: String = "关键字"

    override fun toString(): String {
        return "<$type,$value>"
    }
}